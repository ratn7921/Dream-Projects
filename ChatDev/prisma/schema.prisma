generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String   @id @default(uuid())
  clerkId   String   @unique
  email     String   @unique
  username  String   @unique
  name      String?
  bio       String?
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  media     Media[]     @relation("UserMedia")
  comments  Comment[]   @relation("UserComments")
  likes     Like[]      @relation("UserLikes")
}

model Media {
  id          String   @id @default(uuid())
  type        String   // "image" or "video"
  url         String
  prompt      String?  // For AI-generated content
  title       String?
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  userId    String
  user      User      @relation("UserMedia", fields: [userId], references: [id], onDelete: Cascade)
  comments  Comment[] @relation("MediaComments")
  likes     Like[]    @relation("MediaLikes")
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  userId    String
  user      User    @relation("UserComments", fields: [userId], references: [id], onDelete: Cascade)
  mediaId   String
  media     Media   @relation("MediaComments", fields: [mediaId], references: [id], onDelete: Cascade)
}

model Like {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  // Relations
  userId    String
  user      User    @relation("UserLikes", fields: [userId], references: [id], onDelete: Cascade)
  mediaId   String
  media     Media   @relation("MediaLikes", fields: [mediaId], references: [id], onDelete: Cascade)

  @@unique([userId, mediaId])
}
